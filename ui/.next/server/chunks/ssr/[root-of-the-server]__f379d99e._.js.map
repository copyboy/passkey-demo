{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///Users/gerrad/workspace_cursor/passkey-demo/ui/src/lib/api.ts"],"sourcesContent":["import { RegisterRequest, LoginRequest, AuthResponse, RegistrationOptions, AuthenticationOptions, ErrorResponse, User } from '../types';\n\nconst API_BASE_URL = 'http://localhost:3001/api';\n\nclass ApiClient {\n  private async request<T>(endpoint: string, options: RequestInit = {}): Promise<T> {\n    const url = `${API_BASE_URL}${endpoint}`;\n    \n    const response = await fetch(url, {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      ...options,\n    });\n\n    if (!response.ok) {\n      const errorData: ErrorResponse = await response.json();\n      throw new Error(errorData.error.message);\n    }\n\n    return response.json();\n  }\n\n  // 注册相关\n  async getRegistrationChallenge(username: string): Promise<RegistrationOptions> {\n    return this.request<RegistrationOptions>('/auth/register/challenge', {\n      method: 'POST',\n      body: JSON.stringify({ username }),\n    });\n  }\n\n  async verifyRegistration(data: RegisterRequest): Promise<AuthResponse> {\n    return this.request<AuthResponse>('/auth/register/verify', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  // 登录相关\n  async getLoginChallenge(username: string): Promise<AuthenticationOptions> {\n    return this.request<AuthenticationOptions>('/auth/login/challenge', {\n      method: 'POST',\n      body: JSON.stringify({ username }),\n    });\n  }\n\n  async verifyLogin(data: LoginRequest): Promise<AuthResponse> {\n    return this.request<AuthResponse>('/auth/login/verify', {\n      method: 'POST',\n      body: JSON.stringify(data),\n      credentials: 'include',\n    });\n  }\n\n  // 用户相关\n  async getCurrentUser(): Promise<User> {\n    return this.request<User>('/user/me', {\n      method: 'GET',\n      credentials: 'include',\n    });\n  }\n\n  async logout(): Promise<{ success: boolean; message: string }> {\n    return this.request<{ success: boolean; message: string }>('/auth/logout', {\n      method: 'POST',\n      credentials: 'include',\n    });\n  }\n\n  // 健康检查\n  async healthCheck(): Promise<{ status: string; timestamp: string }> {\n    return this.request<{ status: string; timestamp: string }>('/health');\n  }\n}\n\nexport const apiClient = new ApiClient();"],"names":[],"mappings":";;;;AAEA,MAAM,eAAe;AAErB,MAAM;IACJ,MAAc,QAAW,QAAgB,EAAE,UAAuB,CAAC,CAAC,EAAc;QAChF,MAAM,MAAM,GAAG,eAAe,UAAU;QAExC,MAAM,WAAW,MAAM,MAAM,KAAK;YAChC,SAAS;gBACP,gBAAgB;gBAChB,GAAG,QAAQ,OAAO;YACpB;YACA,GAAG,OAAO;QACZ;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,YAA2B,MAAM,SAAS,IAAI;YACpD,MAAM,IAAI,MAAM,UAAU,KAAK,CAAC,OAAO;QACzC;QAEA,OAAO,SAAS,IAAI;IACtB;IAEA,OAAO;IACP,MAAM,yBAAyB,QAAgB,EAAgC;QAC7E,OAAO,IAAI,CAAC,OAAO,CAAsB,4BAA4B;YACnE,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;gBAAE;YAAS;QAClC;IACF;IAEA,MAAM,mBAAmB,IAAqB,EAAyB;QACrE,OAAO,IAAI,CAAC,OAAO,CAAe,yBAAyB;YACzD,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;IACF;IAEA,OAAO;IACP,MAAM,kBAAkB,QAAgB,EAAkC;QACxE,OAAO,IAAI,CAAC,OAAO,CAAwB,yBAAyB;YAClE,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;gBAAE;YAAS;QAClC;IACF;IAEA,MAAM,YAAY,IAAkB,EAAyB;QAC3D,OAAO,IAAI,CAAC,OAAO,CAAe,sBAAsB;YACtD,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;YACrB,aAAa;QACf;IACF;IAEA,OAAO;IACP,MAAM,iBAAgC;QACpC,OAAO,IAAI,CAAC,OAAO,CAAO,YAAY;YACpC,QAAQ;YACR,aAAa;QACf;IACF;IAEA,MAAM,SAAyD;QAC7D,OAAO,IAAI,CAAC,OAAO,CAAwC,gBAAgB;YACzE,QAAQ;YACR,aAAa;QACf;IACF;IAEA,OAAO;IACP,MAAM,cAA8D;QAClE,OAAO,IAAI,CAAC,OAAO,CAAwC;IAC7D;AACF;AAEO,MAAM,YAAY,IAAI","debugId":null}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///Users/gerrad/workspace_cursor/passkey-demo/ui/src/lib/webauthn.ts"],"sourcesContent":["import { RegistrationOptions, AuthenticationOptions } from '../types';\n\nexport class WebAuthnService {\n  static isSupported(): boolean {\n    return typeof PublicKeyCredential !== 'undefined' && \n           typeof navigator !== 'undefined' && \n           typeof navigator.credentials !== 'undefined';\n  }\n\n  static checkSupport(): { supported: boolean; details: any } {\n    const details: any = {};\n\n    // 检查基本的 WebAuthn 支持\n    details.webAuthnAvailable = typeof PublicKeyCredential !== 'undefined';\n    \n    // 检查具体方法\n    details.navigatorCredentialsAvailable = typeof navigator !== 'undefined' && typeof navigator.credentials !== 'undefined';\n    details.publicKeyAvailable = details.navigatorCredentialsAvailable && typeof PublicKeyCredential !== 'undefined';\n    \n    // 检查用户验证支持\n    details.userVerificationAvailable = details.publicKeyAvailable && typeof PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable === 'function';\n    \n    // 检查设备凭证支持\n    details.devicePublicKeyAvailable = details.publicKeyAvailable && typeof PublicKeyCredential.isConditionalMediationAvailable === 'function';\n\n    return {\n      supported: details.webAuthnAvailable && details.navigatorCredentialsAvailable,\n      details\n    };\n  }\n\n  static validateCredential(credential: any): { valid: boolean; errors: string[] } {\n    const errors: string[] = [];\n\n    if (!credential) {\n      errors.push('凭证对象为空');\n      return { valid: false, errors };\n    }\n\n    if (!credential.id) {\n      errors.push('缺少凭证 ID');\n    }\n\n    if (!credential.rawId) {\n      errors.push('缺少 rawId');\n    }\n\n    if (!credential.type || credential.type !== 'public-key') {\n      errors.push('无效的凭证类型');\n    }\n\n    if (!credential.response) {\n      errors.push('缺少响应对象');\n    } else {\n      if (!credential.response.clientDataJSON) {\n        errors.push('缺少 clientDataJSON');\n      }\n\n      if (!credential.response.attestationObject && !credential.response.authenticatorData) {\n        errors.push('缺少 attestationObject 或 authenticatorData');\n      }\n    }\n\n    return {\n      valid: errors.length === 0,\n      errors\n    };\n  }\n\n  // 将 ArrayBuffer 转换为标准 base64 字符串\n  private static arrayBufferToBase64(buffer: ArrayBuffer): string {\n    if (!buffer) {\n      return '';\n    }\n    \n    const bytes = new Uint8Array(buffer);\n    let binary = '';\n    for (let i = 0; i < bytes.byteLength; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return btoa(binary);\n  }\n\n  \n  // 使用原生 WebAuthn API 进行注册\n  static async register(options: RegistrationOptions) {\n    try {\n      console.log('🔐 [WEBAUTHN] 开始原生注册');\n      \n      // 详细分析输入数据格式\n      console.log('🔍 [WEBAUTHN] ===== 输入数据分析 =====');\n      console.log('🔍 [WEBAUTHN] Challenge 格式分析:', {\n        value: options.challenge,\n        length: options.challenge.length,\n        type: typeof options.challenge,\n        prefix: options.challenge.substring(0, 20),\n        hasUnderscore: options.challenge.includes('_'),\n        hasMinus: options.challenge.includes('-'),\n        hasPlus: options.challenge.includes('+'),\n        hasSlash: options.challenge.includes('/')\n      });\n      \n      console.log('🔍 [WEBAUTHN] User ID 格式分析:', {\n        value: options.user.id,\n        length: options.user.id.length,\n        type: typeof options.user.id,\n        prefix: options.user.id.substring(0, 20),\n        hasUnderscore: options.user.id.includes('_'),\n        hasMinus: options.user.id.includes('-'),\n        hasPlus: options.user.id.includes('+'),\n        hasSlash: options.user.id.includes('/')\n      });\n      \n      // 验证和转换 challenge\n      let challengeBuffer: ArrayBuffer;\n      try {\n        challengeBuffer = this.base64ToArrayBuffer(options.challenge);\n        console.log('✅ [WEBAUTHN] Challenge 转换成功，长度:', challengeBuffer.byteLength);\n      } catch (error) {\n        console.error('❌ [WEBAUTHN] Challenge 转换失败:', error);\n        throw new Error(`Invalid challenge format: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n      \n      // 验证和转换 user.id\n      let userIdBuffer: ArrayBuffer;\n      try {\n        userIdBuffer = this.base64ToArrayBuffer(options.user.id);\n        console.log('✅ [WEBAUTHN] User ID 转换成功，长度:', userIdBuffer.byteLength);\n      } catch (error) {\n        console.error('❌ [WEBAUTHN] User ID 转换失败:', error);\n        throw new Error(`Invalid user ID format: ${error instanceof Error ? error.message : 'Unknown error'}`);\n      }\n      \n      // 构建原生 PublicKeyCredentialCreationOptions\n      const publicKeyOptions: PublicKeyCredentialCreationOptions = {\n        challenge: challengeBuffer,\n        rp: options.rp,\n        user: {\n          id: userIdBuffer,\n          name: options.user.name,\n          displayName: options.user.displayName\n        },\n        pubKeyCredParams: options.pubKeyCredParams,\n        timeout: options.timeout,\n        excludeCredentials: options.excludeCredentials?.map(cred => ({\n          id: this.base64ToArrayBuffer(cred.id),\n          type: cred.type\n        })),\n        authenticatorSelection: options.authenticatorSelection,\n        attestation: options.attestation as AttestationConveyancePreference\n      };\n\n      console.log('🔐 [WEBAUTHN] 调用原生 navigator.credentials.create...');\n      const credential = await navigator.credentials.create({ publicKey: publicKeyOptions }) as PublicKeyCredential;\n      \n      console.log('✅ [WEBAUTHN] 原生注册成功');\n      console.log('🔐 [WEBAUTHN] 凭证 ID:', credential.id);\n      console.log('🔐 [WEBAUTHN] 凭证类型:', credential.type);\n      console.log('🔐 [WEBAUTHN] rawId 长度:', credential.rawId.byteLength);\n      \n      // 序列化为可传输的格式\n      const serialized = this.serializeNativeCredential(credential);\n      console.log('✅ [WEBAUTHN] 序列化完成');\n      \n      return serialized;\n    } catch (error) {\n      console.error('❌ [WEBAUTHN] 原生注册错误:', error);\n      console.error('❌ [WEBAUTHN] 错误类型:', error.constructor.name);\n      console.error('❌ [WEBAUTHN] 错误消息:', error instanceof Error ? error.message : 'Unknown error');\n      \n      if (error instanceof DOMException) {\n        console.error('❌ [WEBAUTHN] DOMException 详情:', {\n          name: error.name,\n          message: error.message,\n          code: error.code\n        });\n      }\n      \n      throw new Error(`注册失败: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  // 使用原生 WebAuthn API 进行认证\n  static async authenticate(options: AuthenticationOptions) {\n    try {\n      console.log('🔐 [WEBAUTHN] 开始原生认证');\n      \n      // 构建原生 PublicKeyCredentialRequestOptions\n      const publicKeyOptions: PublicKeyCredentialRequestOptions = {\n        challenge: this.base64ToArrayBuffer(options.challenge),\n        rpId: options.rpId,\n        allowCredentials: options.allowCredentials?.map(cred => ({\n          id: this.base64ToArrayBuffer(cred.id),\n          type: cred.type,\n          transports: cred.transports as AuthenticatorTransport[]\n        })),\n        userVerification: options.userVerification as UserVerificationRequirement,\n        timeout: options.timeout\n      };\n\n      console.log('🔐 [WEBAUTHN] 登录选项:', {\n        challenge: '***',\n        rpId: publicKeyOptions.rpId,\n        allowCredentialsCount: publicKeyOptions.allowCredentials?.length || 0,\n        userVerification: publicKeyOptions.userVerification,\n        timeout: publicKeyOptions.timeout,\n        credentialTransports: publicKeyOptions.allowCredentials?.map(c => c.transports).flat()\n      });\n\n      console.log('🔐 [WEBAUTHN] 调用原生 navigator.credentials.get...');\n      const credential = await navigator.credentials.get({ publicKey: publicKeyOptions }) as PublicKeyCredential;\n      \n      console.log('🔐 [WEBAUTHN] 原生认证成功');\n      console.log('🔐 [WEBAUTHN] 凭证 ID:', credential.id);\n      \n      // 序列化为可传输的格式\n      const serialized = this.serializeNativeCredential(credential);\n      \n      return serialized;\n    } catch (error) {\n      console.error('❌ [WEBAUTHN] 原生认证错误:', error);\n      throw new Error('登录失败，请重试');\n    }\n  }\n\n  // 序列化原生 WebAuthn 凭证\n  private static serializeNativeCredential(credential: PublicKeyCredential): any {\n    const response = credential.response as AuthenticatorAttestationResponse | AuthenticatorAssertionResponse;\n    \n    console.log('🔐 [WEBAUTHN] 开始序列化原生凭证...');\n    \n    const serialized = {\n      id: credential.id,\n      rawId: this.arrayBufferToBase64(credential.rawId),\n      type: credential.type,\n      response: {\n        clientDataJSON: this.arrayBufferToBase64(response.clientDataJSON),\n        authenticatorData: 'authenticatorData' in response ? this.arrayBufferToBase64(response.authenticatorData) : undefined,\n        signature: 'signature' in response ? this.arrayBufferToBase64(response.signature) : undefined,\n        userHandle: 'userHandle' in response && response.userHandle ? this.arrayBufferToBase64(response.userHandle) : undefined,\n        attestationObject: 'attestationObject' in response ? this.arrayBufferToBase64((response as AuthenticatorAttestationResponse).attestationObject) : undefined\n      },\n      clientExtensionResults: credential.getClientExtensionResults(),\n      authenticatorAttachment: credential.authenticatorAttachment\n    };\n\n    // 清理 undefined 字段\n    Object.keys(serialized.response).forEach(key => {\n      if (serialized.response[key] === undefined) {\n        delete serialized.response[key];\n      }\n    });\n\n    console.log('🔐 [WEBAUTHN] 原生序列化完成');\n    return serialized;\n  }\n\n  // 健壮的 base64 转 ArrayBuffer - 支持多种格式\n  private static base64ToArrayBuffer(base64: string): ArrayBuffer {\n    if (!base64 || typeof base64 !== 'string') {\n      throw new Error(`Invalid base64 input: ${typeof base64}`);\n    }\n\n    console.log('🔧 [WEBAUTHN] 处理 base64 输入:', {\n      length: base64.length,\n      prefix: base64.substring(0, 20),\n      hasUnderscore: base64.includes('_'),\n      hasMinus: base64.includes('-'),\n      hasPlus: base64.includes('+'),\n      hasSlash: base64.includes('/'),\n      hasEquals: base64.includes('=')\n    });\n\n    // 清理和标准化 base64 字符串\n    let cleanBase64 = base64.trim();\n    \n    // 检测并转换 base64url 格式\n    if (cleanBase64.includes('_') || cleanBase64.includes('-')) {\n      console.log('🔧 [WEBAUTHN] 检测到 base64url 格式，转换为标准 base64');\n      cleanBase64 = cleanBase64\n        .replace(/_/g, '/')  // _ -> /\n        .replace(/-/g, '+');  // - -> +\n    }\n\n    // 移除所有空白字符\n    cleanBase64 = cleanBase64.replace(/\\s/g, '');\n\n    // 添加必要的填充\n    const paddingNeeded = (4 - (cleanBase64.length % 4)) % 4;\n    if (paddingNeeded > 0) {\n      console.log(`🔧 [WEBAUTHN] 添加 ${paddingNeeded} 个填充字符`);\n      cleanBase64 += '='.repeat(paddingNeeded);\n    }\n\n    // 验证 base64 格式\n    if (!this.isValidBase64(cleanBase64)) {\n      console.error('❌ [WEBAUTHN] 无效的 base64 格式:', cleanBase64.substring(0, 50));\n      throw new Error('Invalid base64 format');\n    }\n\n    try {\n      const binaryString = atob(cleanBase64);\n      const bytes = new Uint8Array(binaryString.length);\n      for (let i = 0; i < binaryString.length; i++) {\n        bytes[i] = binaryString.charCodeAt(i);\n      }\n      console.log('✅ [WEBAUTHN] base64 转换成功，长度:', bytes.length);\n      return bytes.buffer;\n    } catch (error) {\n      console.error('❌ [WEBAUTHN] atob() 转换失败:', error);\n      console.error('❌ [WEBAUTHN] 输入字符串:', cleanBase64);\n      throw new Error(`Base64 decoding failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n\n  // 验证 base64 格式\n  private static isValidBase64(str: string): boolean {\n    // 标准 base64 正则：A-Z, a-z, 0-9, +, /, =\n    const base64Regex = /^[A-Za-z0-9+/]+={0,2}$/;\n    return base64Regex.test(str) && str.length > 0;\n  }\n\n  // ArrayBuffer 转 base64\n  private static arrayBufferToBase64(buffer: ArrayBuffer): string {\n    if (!buffer) {\n      return '';\n    }\n\n    try {\n      const bytes = new Uint8Array(buffer);\n      let binary = '';\n      for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n      }\n      return btoa(binary);\n    } catch (error) {\n      console.error('❌ [WEBAUTHN] btoa() 转换失败:', error);\n      throw new Error(`Base64 encoding failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  }\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["file:///Users/gerrad/workspace_cursor/passkey-demo/ui/src/components/RegisterForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { apiClient } from '@/lib/api';\nimport { WebAuthnService } from '@/lib/webauthn';\nimport { RegistrationOptions } from '@/types';\n\nexport function RegisterForm() {\n  const [username, setUsername] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n\n  const handleRegister = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!username.trim()) {\n      setError('请输入用户名');\n      return;\n    }\n\n    if (!WebAuthnService.isSupported()) {\n      setError('您的浏览器不支持 WebAuthn');\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      console.log('🚀 开始注册流程，用户名:', username.trim());\n      \n      // 检查 WebAuthn 支持\n      console.log('🔍 检查 WebAuthn 支持...');\n      const support = WebAuthnService.checkSupport();\n      console.log('🔍 WebAuthn 支持情况:', support);\n      \n      if (!support.supported) {\n        setError('您的浏览器不支持 WebAuthn');\n        return;\n      }\n      \n      // 1. 获取注册挑战\n      console.log('📋 请求注册挑战...');\n      const options: RegistrationOptions = await apiClient.getRegistrationChallenge(username.trim());\n      console.log('📋 注册挑战响应:', JSON.stringify(options, null, 2));\n      console.log('📋 Challenge 值:', options.challenge);\n      console.log('📋 User ID:', options.user.id);\n      console.log('📋 RP ID:', options.rp.id);\n      \n      // 2. 启动 WebAuthn 注册\n      console.log('🔐 开始 WebAuthn 注册...');\n      const credential = await WebAuthnService.register(options);\n      console.log('🔐 WebAuthn 注册响应原始数据:', credential);\n      console.log('🔐 Credential ID:', credential.id);\n      console.log('🔐 Credential rawId:', credential.rawId);\n      console.log('🔐 Client data JSON:', credential.response?.clientDataJSON);\n      console.log('🔐 Attestation object:', credential.response?.attestationObject);\n      console.log('🔐 Type:', credential.type);\n      \n      // 验证凭证结构\n      const validation = WebAuthnService.validateCredential(credential);\n      console.log('🔍 凭证验证结果:', validation);\n      \n      if (!validation.valid) {\n        console.error('❌ 凭证验证失败:', validation.errors);\n        setError('凭证验证失败: ' + validation.errors.join(', '));\n        return;\n      }\n      \n      // 详细检查响应结构\n      if (credential.response) {\n        console.log('🔐 Response keys:', Object.keys(credential.response));\n        console.log('🔐 Client data JSON length:', credential.response.clientDataJSON?.length);\n        console.log('🔐 Attestation object length:', credential.response.attestationObject?.length);\n      }\n      \n      // 3. 验证注册\n      console.log('✅ 发送验证请求...');\n      const verificationRequest = {\n        username: username.trim(),\n        credential\n      };\n      console.log('✅ 验证请求数据:', JSON.stringify(verificationRequest, null, 2));\n      \n      const result = await apiClient.verifyRegistration(verificationRequest);\n      console.log('✅ 验证响应:', result);\n\n      if (result.success) {\n        setSuccess('注册成功！您现在可以使用 Passkey 登录了');\n        setUsername('');\n      } else {\n        setError(result.message);\n      }\n    } catch (err) {\n      console.error('❌ 注册流程错误:', err);\n      console.error('❌ 错误类型:', typeof err);\n      console.error('❌ 错误详情:', err instanceof Error ? err.stack : 'No stack trace');\n      setError(err instanceof Error ? err.message : '注册失败');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto p-6 bg-white rounded-lg shadow-md\">\n      <h2 className=\"text-2xl font-black mb-6 text-center text-blue-900 border-b-2 border-blue-500 pb-3\">🔐 注册 Passkey</h2>\n      \n      <form onSubmit={handleRegister} className=\"space-y-4\">\n        <div>\n          <label htmlFor=\"username\" className=\"block text-sm font-semibold text-gray-800 mb-2\">\n            用户名\n          </label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className=\"w-full px-4 py-3 text-gray-900 bg-white border-2 border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100 disabled:text-gray-500 placeholder-gray-400 text-base font-medium shadow-sm transition-all duration-200\"\n            placeholder=\"请输入用户名\"\n            disabled={isLoading}\n            autoComplete=\"username\"\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={isLoading || !username.trim()}\n          className=\"w-full bg-blue-600 text-white py-3 px-4 rounded-lg font-semibold text-base hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed shadow-sm transition-all duration-200 transform hover:scale-[1.02] active:scale-[0.98]\"\n        >\n          {isLoading ? '注册中...' : '使用 Passkey 注册'}\n        </button>\n      </form>\n\n      {error && (\n        <div className=\"mt-4 p-4 bg-red-50 border-l-4 border-red-400 text-red-800 rounded-lg shadow-sm\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm font-medium\">{error}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {success && (\n        <div className=\"mt-4 p-4 bg-green-50 border-l-4 border-green-400 text-green-800 rounded-lg shadow-sm\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-green-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm font-medium\">{success}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"mt-4 text-sm text-gray-600\">\n        <p className=\"font-bold text-base text-gray-800 mb-2\">📋 注册说明：</p>\n        <ul className=\"list-disc list-inside mt-2 space-y-1\">\n          <li>请确保您的设备支持生物识别（指纹、面部识别等）</li>\n          <li>注册过程中需要验证您的身份</li>\n          <li>注册完成后，您可以使用相同的生物识别方式登录</li>\n        </ul>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 711, "column": 0}, "map": {"version":3,"sources":["file:///Users/gerrad/workspace_cursor/passkey-demo/ui/src/components/LoginForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { apiClient } from '@/lib/api';\nimport { WebAuthnService } from '@/lib/webauthn';\nimport { AuthenticationOptions } from '@/types';\n\nexport function LoginForm() {\n  const [username, setUsername] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!username.trim()) {\n      setError('请输入用户名');\n      return;\n    }\n\n    if (!WebAuthnService.isSupported()) {\n      setError('您的浏览器不支持 WebAuthn');\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n    setSuccess(null);\n\n    try {\n      // 1. 获取登录挑战\n      const options: AuthenticationOptions = await apiClient.getLoginChallenge(username.trim());\n      \n      // 2. 启动 WebAuthn 认证\n      const credential = await WebAuthnService.authenticate(options);\n      \n      // 3. 验证登录\n      const result = await apiClient.verifyLogin({\n        username: username.trim(),\n        credential\n      });\n\n      if (result.success) {\n        setSuccess('登录成功！');\n        setUsername('');\n        // 可以在这里重定向到用户页面\n      } else {\n        setError(result.message);\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : '登录失败');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-md mx-auto p-6 bg-white rounded-lg shadow-md\">\n      <h2 className=\"text-2xl font-black mb-6 text-center text-green-900 border-b-2 border-green-500 pb-3\">🚀 Passkey 登录</h2>\n      \n      <form onSubmit={handleLogin} className=\"space-y-4\">\n        <div>\n          <label htmlFor=\"username\" className=\"block text-sm font-semibold text-gray-800 mb-2\">\n            用户名\n          </label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className=\"w-full px-4 py-3 text-gray-900 bg-white border-2 border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500 disabled:bg-gray-100 disabled:text-gray-500 placeholder-gray-400 text-base font-medium shadow-sm transition-all duration-200\"\n            placeholder=\"请输入用户名\"\n            disabled={isLoading}\n            autoComplete=\"username\"\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={isLoading || !username.trim()}\n          className=\"w-full bg-green-600 text-white py-3 px-4 rounded-lg font-semibold text-base hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed shadow-sm transition-all duration-200 transform hover:scale-[1.02] active:scale-[0.98]\"\n        >\n          {isLoading ? '登录中...' : '使用 Passkey 登录'}\n        </button>\n      </form>\n\n      {error && (\n        <div className=\"mt-4 p-4 bg-red-50 border-l-4 border-red-400 text-red-800 rounded-lg shadow-sm\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm font-medium\">{error}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {success && (\n        <div className=\"mt-4 p-4 bg-green-50 border-l-4 border-green-400 text-green-800 rounded-lg shadow-sm\">\n          <div className=\"flex\">\n            <div className=\"flex-shrink-0\">\n              <svg className=\"h-5 w-5 text-green-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <div className=\"ml-3\">\n              <p className=\"text-sm font-medium\">{success}</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <div className=\"mt-4 text-sm text-gray-600\">\n        <p className=\"font-bold text-base text-gray-800 mb-2\">📝 登录说明：</p>\n        <ul className=\"list-disc list-inside mt-2 space-y-1\">\n          <li>请输入您注册时使用的用户名</li>\n          <li>系统会调用您的设备进行生物识别验证</li>\n          <li>无需记住密码，安全便捷</li>\n        </ul>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAOO,SAAS;IACd,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,gVAAQ,EAAC;IACzC,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,gVAAQ,EAAC;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,gVAAQ,EAAgB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,gVAAQ,EAAgB;IAEtD,MAAM,cAAc,OAAO;QACzB,EAAE,cAAc;QAEhB,IAAI,CAAC,SAAS,IAAI,IAAI;YACpB,SAAS;YACT;QACF;QAEA,IAAI,CAAC,yIAAe,CAAC,WAAW,IAAI;YAClC,SAAS;YACT;QACF;QAEA,aAAa;QACb,SAAS;QACT,WAAW;QAEX,IAAI;YACF,YAAY;YACZ,MAAM,UAAiC,MAAM,8HAAS,CAAC,iBAAiB,CAAC,SAAS,IAAI;YAEtF,oBAAoB;YACpB,MAAM,aAAa,MAAM,yIAAe,CAAC,YAAY,CAAC;YAEtD,UAAU;YACV,MAAM,SAAS,MAAM,8HAAS,CAAC,WAAW,CAAC;gBACzC,UAAU,SAAS,IAAI;gBACvB;YACF;YAEA,IAAI,OAAO,OAAO,EAAE;gBAClB,WAAW;gBACX,YAAY;YACZ,gBAAgB;YAClB,OAAO;gBACL,SAAS,OAAO,OAAO;YACzB;QACF,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAG,WAAU;0BAAuF;;;;;;0BAErG,6WAAC;gBAAK,UAAU;gBAAa,WAAU;;kCACrC,6WAAC;;0CACC,6WAAC;gCAAM,SAAQ;gCAAW,WAAU;0CAAiD;;;;;;0CAGrF,6WAAC;gCACC,IAAG;gCACH,MAAK;gCACL,OAAO;gCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;gCAC3C,WAAU;gCACV,aAAY;gCACZ,UAAU;gCACV,cAAa;;;;;;;;;;;;kCAIjB,6WAAC;wBACC,MAAK;wBACL,UAAU,aAAa,CAAC,SAAS,IAAI;wBACrC,WAAU;kCAET,YAAY,WAAW;;;;;;;;;;;;YAI3B,uBACC,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBAAI,WAAU;;sCACb,6WAAC;4BAAI,WAAU;sCACb,cAAA,6WAAC;gCAAI,WAAU;gCAAuB,SAAQ;gCAAY,MAAK;0CAC7D,cAAA,6WAAC;oCAAK,UAAS;oCAAU,GAAE;oCAA0N,UAAS;;;;;;;;;;;;;;;;sCAGlQ,6WAAC;4BAAI,WAAU;sCACb,cAAA,6WAAC;gCAAE,WAAU;0CAAuB;;;;;;;;;;;;;;;;;;;;;;YAM3C,yBACC,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBAAI,WAAU;;sCACb,6WAAC;4BAAI,WAAU;sCACb,cAAA,6WAAC;gCAAI,WAAU;gCAAyB,SAAQ;gCAAY,MAAK;0CAC/D,cAAA,6WAAC;oCAAK,UAAS;oCAAU,GAAE;oCAAwI,UAAS;;;;;;;;;;;;;;;;sCAGhL,6WAAC;4BAAI,WAAU;sCACb,cAAA,6WAAC;gCAAE,WAAU;0CAAuB;;;;;;;;;;;;;;;;;;;;;;0BAM5C,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;wBAAE,WAAU;kCAAyC;;;;;;kCACtD,6WAAC;wBAAG,WAAU;;0CACZ,6WAAC;0CAAG;;;;;;0CACJ,6WAAC;0CAAG;;;;;;0CACJ,6WAAC;0CAAG;;;;;;;;;;;;;;;;;;;;;;;;AAKd","debugId":null}},
    {"offset": {"line": 997, "column": 0}, "map": {"version":3,"sources":["file:///Users/gerrad/workspace_cursor/passkey-demo/ui/src/components/UserInfo.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { apiClient } from '@/lib/api';\nimport { User } from '@/types';\n\nexport function UserInfo() {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    fetchUserInfo();\n  }, []);\n\n  const fetchUserInfo = async () => {\n    try {\n      const userData = await apiClient.getCurrentUser();\n      setUser(userData);\n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : '获取用户信息失败');\n      setUser(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleLogout = async () => {\n    try {\n      await apiClient.logout();\n      setUser(null);\n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : '注销失败');\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"max-w-md mx-auto p-6 bg-white rounded-lg shadow-md\">\n        <div className=\"text-center\">加载中...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"max-w-md mx-auto p-6 bg-white rounded-lg shadow-md\">\n        <div className=\"text-red-600 text-center\">{error}</div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return (\n      <div className=\"max-w-md mx-auto p-6 bg-white rounded-lg shadow-md\">\n        <div className=\"text-center text-gray-600\">您还未登录</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-md mx-auto p-6 bg-white rounded-lg shadow-md\">\n      <h2 className=\"text-2xl font-black mb-6 text-center text-gray-900 border-b-2 border-blue-500 pb-3\">👤 用户信息</h2>\n      \n      <div className=\"space-y-3\">\n        <div>\n          <span className=\"font-medium text-gray-700\">用户名：</span>\n          <span className=\"text-gray-900\">{user.username}</span>\n        </div>\n        \n        <div>\n          <span className=\"font-medium text-gray-700\">注册时间：</span>\n          <span className=\"text-gray-900\">\n            {new Date(user.created_at).toLocaleString('zh-CN')}\n          </span>\n        </div>\n\n        {user.credentials && user.credentials.length > 0 && (\n          <div>\n            <span className=\"font-medium text-gray-700\">Passkey 数量：</span>\n            <span className=\"text-gray-900\">{user.credentials.length}</span>\n          </div>\n        )}\n      </div>\n\n      <div className=\"mt-6\">\n        <button\n          onClick={handleLogout}\n          className=\"w-full bg-red-600 text-white py-2 px-4 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2\"\n        >\n          注销\n        </button>\n      </div>\n\n      {user.credentials && user.credentials.length > 0 && (\n        <div className=\"mt-4 text-sm text-gray-600\">\n          <p className=\"font-bold text-lg text-gray-800 mb-2\">🔑 您的 Passkey：</p>\n          <ul className=\"list-disc list-inside mt-2 space-y-1\">\n            {user.credentials.map((credential, index) => (\n              <li key={credential.id}>\n                Passkey {index + 1} - 创建于 {new Date(credential.created_at).toLocaleDateString('zh-CN')}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAMO,SAAS;IACd,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,gVAAQ,EAAc;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,gVAAQ,EAAC;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,gVAAQ,EAAgB;IAElD,IAAA,iVAAS,EAAC;QACR;IACF,GAAG,EAAE;IAEL,MAAM,gBAAgB;QACpB,IAAI;YACF,MAAM,WAAW,MAAM,8HAAS,CAAC,cAAc;YAC/C,QAAQ;YACR,SAAS;QACX,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAC9C,QAAQ;QACV,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,eAAe;QACnB,IAAI;YACF,MAAM,8HAAS,CAAC,MAAM;YACtB,QAAQ;YACR,SAAS;QACX,EAAE,OAAO,KAAK;YACZ,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD;IACF;IAEA,IAAI,WAAW;QACb,qBACE,6WAAC;YAAI,WAAU;sBACb,cAAA,6WAAC;gBAAI,WAAU;0BAAc;;;;;;;;;;;IAGnC;IAEA,IAAI,OAAO;QACT,qBACE,6WAAC;YAAI,WAAU;sBACb,cAAA,6WAAC;gBAAI,WAAU;0BAA4B;;;;;;;;;;;IAGjD;IAEA,IAAI,CAAC,MAAM;QACT,qBACE,6WAAC;YAAI,WAAU;sBACb,cAAA,6WAAC;gBAAI,WAAU;0BAA4B;;;;;;;;;;;IAGjD;IAEA,qBACE,6WAAC;QAAI,WAAU;;0BACb,6WAAC;gBAAG,WAAU;0BAAqF;;;;;;0BAEnG,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;;0CACC,6WAAC;gCAAK,WAAU;0CAA4B;;;;;;0CAC5C,6WAAC;gCAAK,WAAU;0CAAiB,KAAK,QAAQ;;;;;;;;;;;;kCAGhD,6WAAC;;0CACC,6WAAC;gCAAK,WAAU;0CAA4B;;;;;;0CAC5C,6WAAC;gCAAK,WAAU;0CACb,IAAI,KAAK,KAAK,UAAU,EAAE,cAAc,CAAC;;;;;;;;;;;;oBAI7C,KAAK,WAAW,IAAI,KAAK,WAAW,CAAC,MAAM,GAAG,mBAC7C,6WAAC;;0CACC,6WAAC;gCAAK,WAAU;0CAA4B;;;;;;0CAC5C,6WAAC;gCAAK,WAAU;0CAAiB,KAAK,WAAW,CAAC,MAAM;;;;;;;;;;;;;;;;;;0BAK9D,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;YAKF,KAAK,WAAW,IAAI,KAAK,WAAW,CAAC,MAAM,GAAG,mBAC7C,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;wBAAE,WAAU;kCAAuC;;;;;;kCACpD,6WAAC;wBAAG,WAAU;kCACX,KAAK,WAAW,CAAC,GAAG,CAAC,CAAC,YAAY,sBACjC,6WAAC;;oCAAuB;oCACb,QAAQ;oCAAE;oCAAQ,IAAI,KAAK,WAAW,UAAU,EAAE,kBAAkB,CAAC;;+BADvE,WAAW,EAAE;;;;;;;;;;;;;;;;;;;;;;AASpC","debugId":null}},
    {"offset": {"line": 1242, "column": 0}, "map": {"version":3,"sources":["file:///Users/gerrad/workspace_cursor/passkey-demo/ui/src/components/ErrorBoundary.tsx"],"sourcesContent":["'use client';\n\nimport React, { Component, ErrorInfo, ReactNode } from 'react';\n\ninterface Props {\n  children: ReactNode;\n  fallback?: ReactNode;\n  onError?: (error: Error, errorInfo: ErrorInfo) => void;\n}\n\ninterface State {\n  hasError: boolean;\n  error: Error | null;\n  errorInfo: ErrorInfo | null;\n}\n\nexport class ErrorBoundary extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      hasError: false,\n      error: null,\n      errorInfo: null\n    };\n  }\n\n  static getDerivedStateFromError(error: Error): State {\n    return {\n      hasError: true,\n      error,\n      errorInfo: null\n    };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('❌ [ERROR_BOUNDARY] 捕获到错误:', error);\n    console.error('❌ [ERROR_BOUNDARY] 错误信息:', errorInfo);\n    \n    this.setState({\n      error,\n      errorInfo\n    });\n\n    // 调用自定义错误处理\n    if (this.props.onError) {\n      this.props.onError(error, errorInfo);\n    }\n  }\n\n  render() {\n    if (this.state.hasError) {\n      if (this.props.fallback) {\n        return this.props.fallback;\n      }\n\n      return (\n        <div className=\"min-w-full p-4 bg-red-50 border border-red-200 rounded-lg\">\n          <div className=\"max-w-md mx-auto\">\n            <h2 className=\"text-lg font-semibold text-red-800 mb-2\">\n              ❌ 系统错误\n            </h2>\n            <div className=\"text-sm text-red-700 space-y-2\">\n              <p>\n                <strong>错误信息:</strong> {this.state.error?.message || '未知错误'}\n              </p>\n              {this.state.error?.stack && (\n                <details className=\"mt-2\">\n                  <summary className=\"cursor-pointer text-red-600 hover:text-red-800\">\n                    查看错误堆栈\n                  </summary>\n                  <pre className=\"mt-2 p-2 bg-red-100 rounded text-xs overflow-auto max-h-40\">\n                    {this.state.error.stack}\n                  </pre>\n                </details>\n              )}\n              {this.state.errorInfo && (\n                <details className=\"mt-2\">\n                  <summary className=\"cursor-pointer text-red-600 hover:text-red-800\">\n                    查看组件堆栈\n                  </summary>\n                  <pre className=\"mt-2 p-2 bg-red-100 rounded text-xs overflow-auto max-h-40\">\n                    {this.state.errorInfo.componentStack}\n                  </pre>\n                </details>\n              )}\n            </div>\n            <button\n              onClick={() => this.setState({ hasError: false, error: null, errorInfo: null })}\n              className=\"mt-4 px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 transition-colors\"\n            >\n              重试\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\n// WebAuthn 特定的错误边界\nexport function WebAuthnErrorBoundary({ children }: { children: ReactNode }) {\n  const handleError = (error: Error, errorInfo: ErrorInfo) => {\n    console.error('🔐 [WEBAUTHN_ERROR] WebAuthn 错误:', error);\n    console.error('🔐 [WEBAUTHN_ERROR] 组件信息:', errorInfo);\n    \n    // 发送错误到分析服务（如果需要）\n    // sendErrorToAnalytics(error, errorInfo);\n  };\n\n  return (\n    <ErrorBoundary \n      onError={handleError}\n      fallback={\n        <div className=\"min-w-full p-4 bg-orange-50 border border-orange-200 rounded-lg\">\n          <div className=\"max-w-md mx-auto text-center\">\n            <h2 className=\"text-lg font-semibold text-orange-800 mb-2\">\n              🔐 WebAuthn 认证错误\n            </h2>\n            <p className=\"text-sm text-orange-700 mb-4\">\n              生物识别认证过程中出现错误。请确保您的设备支持 WebAuthn 并且已经启用了生物识别功能。\n            </p>\n            <div className=\"space-y-2 text-left text-xs text-orange-600\">\n              <p>• 检查浏览器是否支持 WebAuthn</p>\n              <p>• 确保设备有指纹传感器或面部识别</p>\n              <p>• 检查操作系统设置中的生物识别功能</p>\n              <p>• 尝试刷新页面重新开始</p>\n            </div>\n            <button\n              onClick={() => window.location.reload()}\n              className=\"mt-4 px-4 py-2 bg-orange-600 text-white rounded hover:bg-orange-700 transition-colors\"\n            >\n              刷新页面\n            </button>\n          </div>\n        </div>\n      }\n    >\n      {children}\n    </ErrorBoundary>\n  );\n}"],"names":[],"mappings":";;;;;;;AAEA;AAFA;;;AAgBO,MAAM,sBAAsB,iVAAS;IAC1C,YAAY,KAAY,CAAE;QACxB,KAAK,CAAC;QACN,IAAI,CAAC,KAAK,GAAG;YACX,UAAU;YACV,OAAO;YACP,WAAW;QACb;IACF;IAEA,OAAO,yBAAyB,KAAY,EAAS;QACnD,OAAO;YACL,UAAU;YACV;YACA,WAAW;QACb;IACF;IAEA,kBAAkB,KAAY,EAAE,SAAoB,EAAE;QACpD,QAAQ,KAAK,CAAC,6BAA6B;QAC3C,QAAQ,KAAK,CAAC,4BAA4B;QAE1C,IAAI,CAAC,QAAQ,CAAC;YACZ;YACA;QACF;QAEA,YAAY;QACZ,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE;YACtB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO;QAC5B;IACF;IAEA,SAAS;QACP,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACvB,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACvB,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;YAC5B;YAEA,qBACE,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBAAI,WAAU;;sCACb,6WAAC;4BAAG,WAAU;sCAA0C;;;;;;sCAGxD,6WAAC;4BAAI,WAAU;;8CACb,6WAAC;;sDACC,6WAAC;sDAAO;;;;;;wCAAc;wCAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,WAAW;;;;;;;gCAEtD,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,uBACjB,6WAAC;oCAAQ,WAAU;;sDACjB,6WAAC;4CAAQ,WAAU;sDAAiD;;;;;;sDAGpE,6WAAC;4CAAI,WAAU;sDACZ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK;;;;;;;;;;;;gCAI5B,IAAI,CAAC,KAAK,CAAC,SAAS,kBACnB,6WAAC;oCAAQ,WAAU;;sDACjB,6WAAC;4CAAQ,WAAU;sDAAiD;;;;;;sDAGpE,6WAAC;4CAAI,WAAU;sDACZ,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,cAAc;;;;;;;;;;;;;;;;;;sCAK5C,6WAAC;4BACC,SAAS,IAAM,IAAI,CAAC,QAAQ,CAAC;oCAAE,UAAU;oCAAO,OAAO;oCAAM,WAAW;gCAAK;4BAC7E,WAAU;sCACX;;;;;;;;;;;;;;;;;QAMT;QAEA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;AACF;AAGO,SAAS,sBAAsB,EAAE,QAAQ,EAA2B;IACzE,MAAM,cAAc,CAAC,OAAc;QACjC,QAAQ,KAAK,CAAC,oCAAoC;QAClD,QAAQ,KAAK,CAAC,6BAA6B;IAE3C,kBAAkB;IAClB,0CAA0C;IAC5C;IAEA,qBACE,6WAAC;QACC,SAAS;QACT,wBACE,6WAAC;YAAI,WAAU;sBACb,cAAA,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;wBAAG,WAAU;kCAA6C;;;;;;kCAG3D,6WAAC;wBAAE,WAAU;kCAA+B;;;;;;kCAG5C,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;0CAAE;;;;;;0CACH,6WAAC;0CAAE;;;;;;0CACH,6WAAC;0CAAE;;;;;;0CACH,6WAAC;0CAAE;;;;;;;;;;;;kCAEL,6WAAC;wBACC,SAAS,IAAM,OAAO,QAAQ,CAAC,MAAM;wBACrC,WAAU;kCACX;;;;;;;;;;;;;;;;;kBAON;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 1501, "column": 0}, "map": {"version":3,"sources":["file:///Users/gerrad/workspace_cursor/passkey-demo/ui/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { RegisterForm } from '@/components/RegisterForm';\nimport { LoginForm } from '@/components/LoginForm';\nimport { UserInfo } from '@/components/UserInfo';\nimport { WebAuthnErrorBoundary } from '@/components/ErrorBoundary';\n\nexport default function Home() {\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-12\">\n      <div className=\"container mx-auto px-4\">\n        {/* 页面标题 */}\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\n            Passkey 演示应用\n          </h1>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            体验 FIDO2 WebAuthn 技术，使用生物识别安全登录，无需密码\n          </p>\n        </div>\n\n        {/* 功能说明 */}\n        <div className=\"max-w-4xl mx-auto mb-12\">\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <h2 className=\"text-2xl font-semibold text-gray-900 mb-4\">\n              什么是 Passkey？\n            </h2>\n            <div className=\"grid md:grid-cols-3 gap-6\">\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-3\">\n                  <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2\">更安全</h3>\n                <p className=\"text-gray-600 text-sm\">基于公钥加密，私钥永不离开设备，防止密码泄露</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-3\">\n                  <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2\">更便捷</h3>\n                <p className=\"text-gray-600 text-sm\">使用指纹、面部识别等生物识别，一键登录</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-3\">\n                  <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                  </svg>\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2\">防钓鱼</h3>\n                <p className=\"text-gray-600 text-sm\">Passkey 与网站域名绑定，防止钓鱼攻击</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 用户界面区域 */}\n        <div className=\"grid lg:grid-cols-3 gap-8 max-w-6xl mx-auto\">\n          <div className=\"lg:col-span-1\">\n            <UserInfo />\n          </div>\n          \n          <div className=\"lg:col-span-2\">\n            <div className=\"grid md:grid-cols-2 gap-8\">\n              <div>\n                <WebAuthnErrorBoundary>\n                  <RegisterForm />\n                </WebAuthnErrorBoundary>\n              </div>\n              <div>\n                <WebAuthnErrorBoundary>\n                  <LoginForm />\n                </WebAuthnErrorBoundary>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 使用说明 */}\n        <div className=\"max-w-4xl mx-auto mt-12\">\n          <div className=\"bg-blue-50 rounded-lg p-6\">\n            <h3 className=\"text-lg font-semibold text-blue-900 mb-3\">使用步骤</h3>\n            <ol className=\"list-decimal list-inside space-y-2 text-blue-800\">\n              <li>在左侧注册区域输入用户名并点击\"使用 Passkey 注册\"</li>\n              <li>系统会提示您进行生物识别验证（指纹、面部识别等）</li>\n              <li>注册成功后，您可以在右侧登录区域使用相同的用户名登录</li>\n              <li>登录时同样需要生物识别验证</li>\n              <li>成功登录后，用户信息会显示在左侧区域</li>\n            </ol>\n          </div>\n        </div>\n\n        {/* 技术说明 */}\n        <div className=\"max-w-4xl mx-auto mt-8 text-center\">\n          <p className=\"text-sm text-gray-500\">\n            本演示使用 Next.js 15 + TypeScript + Tailwind CSS 构建前端，\n            后端使用 Node.js + Express + SimpleWebAuthn 实现 WebAuthn 功能\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOe,SAAS;IACtB,qBACE,6WAAC;QAAI,WAAU;kBACb,cAAA,6WAAC;YAAI,WAAU;;8BAEb,6WAAC;oBAAI,WAAU;;sCACb,6WAAC;4BAAG,WAAU;sCAAwC;;;;;;sCAGtD,6WAAC;4BAAE,WAAU;sCAA0C;;;;;;;;;;;;8BAMzD,6WAAC;oBAAI,WAAU;8BACb,cAAA,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCAAG,WAAU;0CAA4C;;;;;;0CAG1D,6WAAC;gCAAI,WAAU;;kDACb,6WAAC;wCAAI,WAAU;;0DACb,6WAAC;gDAAI,WAAU;0DACb,cAAA,6WAAC;oDAAI,WAAU;oDAAwB,MAAK;oDAAO,QAAO;oDAAe,SAAQ;8DAC/E,cAAA,6WAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,aAAa;wDAAG,GAAE;;;;;;;;;;;;;;;;0DAGzE,6WAAC;gDAAG,WAAU;0DAAmC;;;;;;0DACjD,6WAAC;gDAAE,WAAU;0DAAwB;;;;;;;;;;;;kDAEvC,6WAAC;wCAAI,WAAU;;0DACb,6WAAC;gDAAI,WAAU;0DACb,cAAA,6WAAC;oDAAI,WAAU;oDAAyB,MAAK;oDAAO,QAAO;oDAAe,SAAQ;8DAChF,cAAA,6WAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,aAAa;wDAAG,GAAE;;;;;;;;;;;;;;;;0DAGzE,6WAAC;gDAAG,WAAU;0DAAmC;;;;;;0DACjD,6WAAC;gDAAE,WAAU;0DAAwB;;;;;;;;;;;;kDAEvC,6WAAC;wCAAI,WAAU;;0DACb,6WAAC;gDAAI,WAAU;0DACb,cAAA,6WAAC;oDAAI,WAAU;oDAA0B,MAAK;oDAAO,QAAO;oDAAe,SAAQ;8DACjF,cAAA,6WAAC;wDAAK,eAAc;wDAAQ,gBAAe;wDAAQ,aAAa;wDAAG,GAAE;;;;;;;;;;;;;;;;0DAGzE,6WAAC;gDAAG,WAAU;0DAAmC;;;;;;0DACjD,6WAAC;gDAAE,WAAU;0DAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAO7C,6WAAC;oBAAI,WAAU;;sCACb,6WAAC;4BAAI,WAAU;sCACb,cAAA,6WAAC,0IAAQ;;;;;;;;;;sCAGX,6WAAC;4BAAI,WAAU;sCACb,cAAA,6WAAC;gCAAI,WAAU;;kDACb,6WAAC;kDACC,cAAA,6WAAC,4JAAqB;sDACpB,cAAA,6WAAC,kJAAY;;;;;;;;;;;;;;;kDAGjB,6WAAC;kDACC,cAAA,6WAAC,4JAAqB;sDACpB,cAAA,6WAAC,4IAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAQpB,6WAAC;oBAAI,WAAU;8BACb,cAAA,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCAAG,WAAU;0CAA2C;;;;;;0CACzD,6WAAC;gCAAG,WAAU;;kDACZ,6WAAC;kDAAG;;;;;;kDACJ,6WAAC;kDAAG;;;;;;kDACJ,6WAAC;kDAAG;;;;;;kDACJ,6WAAC;kDAAG;;;;;;kDACJ,6WAAC;kDAAG;;;;;;;;;;;;;;;;;;;;;;;8BAMV,6WAAC;oBAAI,WAAU;8BACb,cAAA,6WAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;;;;;;;;;;;AAQ/C","debugId":null}}]
}